<!--
***********************************************************************************************
Xamarin.Mac.ObjCBinding.Common.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
  created a backup copy.  Incorrect changes to this file will make it
  impossible to load or build your projects from the command-line or the IDE.

This file imports the version- and platform-specific targets for the project importing
this file. This file also defines targets to produce an error if the specified targets
file does not exist, but the project is built anyway (command-line or IDE build).

Copyright (C) 2014 Xamarin Inc. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<UsingTask TaskName="Xamarin.MacDev.Tasks.CollectBundleResources" AssemblyFile="Xamarin.Mac.Tasks.dll" />
	<UsingTask TaskName="Xamarin.Mac.Tasks.CreateEmbeddedResources" AssemblyFile="Xamarin.Mac.Tasks.dll" />
	<UsingTask TaskName="Microsoft.Build.Tasks.RemoveDir" AssemblyFile="Xamarin.Mac.Tasks.dll"/>

	<Import Project="$(MSBuildThisFileDirectory)Xamarin.Mac.ObjCBinding.Common.props" 
			Condition="'$(_XamarinCommonBindingPropsHasBeenImported)' != 'true'" />

	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.targets" 
			Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.targets')"/>

	<Target Name="FixDesignTimeFacades" AfterTargets="GetReferenceAssemblyPaths" Condition="'$(OS)' != 'Windows_NT'" />

	<Import Project="$(MSBuildThisFileDirectory)Xamarin.Mac.XM45.xbuild.targets"
		Condition="'$(UseXamMacFullFramework)' == 'true' And '$(IsXBuild)' == 'true' "/>
	
	<Import Project="$(MSBuildThisFileDirectory)Xamarin.Mac.msbuild.targets"
		Condition="'$(IsXBuild)' != 'true' "/>

	<!-- Location of Libraries -->
	<Target Name="FixTargetFrameworkDirectory" AfterTargets="FixDesignTimeFacades" Condition="('$(OS)' != 'Windows_NT')">
		<PropertyGroup>
			<!-- For Modern / Full we overwrite TargetFrameworkDirectory to resolve non XM assemblies from our location only -->
			<TargetFrameworkDirectory Condition="'$(TargetFrameworkName)' != 'System'">$(MacBclPath);@(DesignTimeFacadeDirectories)</TargetFrameworkDirectory>

			<!-- For system we extend, not overwrite TargetFrameworkDirectory. -->
			<!-- mscorlib, System, and other BCL libs must come from Mono System to prevent corlib mistmatches. Xamarin.Mac.dll must come from XM/lib/mono/4.5/ -->
			<!-- If we find cases of other non-XM assemblies being resolved from XM paths, we can look into using CandidateAssemblyFiles but it is msbuild only. -->
			<TargetFrameworkDirectory Condition="'$(TargetFrameworkName)' == 'System'">$(TargetFrameworkDirectory);$(MacBclPath)</TargetFrameworkDirectory>
		</PropertyGroup>
	</Target>

	<!-- Add our own pre-build steps -->
	<PropertyGroup>
		<BuildDependsOn>
			BuildOnlySettings;
			_CreateGeneratedSourcesDir;
			_CreateEmbeddedResources;
			$(BuildDependsOn)
		</BuildDependsOn>
	</PropertyGroup>

	<!-- Add our own Clean steps -->
	<PropertyGroup>
		<CleanDependsOn>
			_CleanGeneratedSources;
			$(CleanDependsOn)
		</CleanDependsOn>
	</PropertyGroup>

	<!-- Create a directory to contain the generated sources -->
	<Target Name="_CreateGeneratedSourcesDir">
		<MakeDir Directories="$(GeneratedSourcesDir)" />
	</Target>

	<!-- Clean the generated sources -->
	<Target Name="_CleanGeneratedSources">
		<RemoveDir Directories="$(GeneratedSourcesDir)" Condition="Exists ('$(GeneratedSourcesDir)')" />
	</Target>

	<Target Name="_AssignBundleResourceNames">
		<AssignBundleResourceNames BundleResources="@(BundleResource)" ResourceDirectoryPrefixes="$(XamMacResourcePrefix)">
			<Output ItemName="_BundleResourceWithName" TaskParameter="BundleResourcesWithNames" />
		</AssignBundleResourceNames>
	</Target>

	<Target Name="_CollectBundleResources">
		<CollectBundleResources
			SessionId=""
			OptimizePNGs="False"
			BundleResources="@(Content);@(BundleResource)"
			ProjectDir="$(MSBuildProjectDirectory)"
			ResourcePrefix="$(XamMacResourcePrefix)"
			>

			<Output TaskParameter="BundleResourcesWithLogicalNames" ItemName="_BundleResourceWithLogicalName"/>
		</CollectBundleResources>
	</Target>

	<Target Name="_CreateEmbeddedResources" DependsOnTargets="_CollectBundleResources">
		<CreateEmbeddedResources BundleResources="@(_BundleResourceWithLogicalName)" Prefix="xammac">
			<Output ItemName="EmbeddedResource" TaskParameter="EmbeddedResources" />
		</CreateEmbeddedResources>
	</Target>

	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.targets"
			Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.targets')"/>
</Project>
